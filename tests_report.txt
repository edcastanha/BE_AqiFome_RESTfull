============================= test session starts ==============================
platform linux -- Python 3.12.3, pytest-8.4.1, pluggy-1.6.0
rootdir: /home/edson/repos/BE_AqiFome_RESTfull
plugins: anyio-4.9.0, cov-6.2.1, asyncio-1.0.0
asyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collected 38 items

src/tests/api/test_main.py ..F.                                          [ 10%]
src/tests/core/domain/test_cliente.py .......                            [ 28%]
src/tests/core/domain/test_favorito.py ......                            [ 44%]
src/tests/core/repository/test_cliente_repository.py ........            [ 65%]
src/tests/core/repository/test_favorito_repository.py ......             [ 81%]
src/tests/core/service/test_cliente_service.py ..F.                      [ 92%]
src/tests/core/service/test_favorito_service.py ...                      [100%]

=================================== FAILURES ===================================
________________________ test_crud_cliente_e_favoritos _________________________

mock_redis_config = <MagicMock name='RedisConfig' id='140320089685552'>
mock_fake_store = <MagicMock name='FakeStoreProduct' id='140320074575136'>

    @patch("core.service.favorito_service.FakeStoreProduct")
    @patch("core.service.favorito_service.RedisConfig")
    def test_crud_cliente_e_favoritos(mock_redis_config, mock_fake_store):
        # Mock Redis
        mock_redis = MagicMock()
        mock_redis.get.return_value = None
        mock_redis.set.return_value = True
        mock_redis_config.return_value.get_client.return_value = mock_redis
        mock_redis_config.return_value.get_expires.return_value = 3600
    
        # Mock FakeStoreProduct
        mock_fake_store.return_value.get_product.return_value = {
            "id": 1, "titulo": "Produto Teste", "imagem": "img.png", "preco": 10.0
        }
        mock_fake_store.return_value.get_product_sync.return_value = {
            "id": 1, "titulo": "Produto Teste", "imagem": "img.png", "preco": 10.0
        }
    
        # Criar cliente
        cliente_data = {
            "nome": "Test User",
            "email": "testuser_crud@example.com",  # E-mail único para este teste
            "senha": "senha123",
            "tipo": 0  # Tipo USER normal
        }
    
        # 1. Criar o cliente primeiro (sem token, pois é um endpoint público ou de admin)
        # Para este teste, vamos assumir que a criação de cliente não exige token.
        # Se exigisse, precisaríamos de um token de admin.
        resp = client.post("/clientes", json=cliente_data)
>       assert resp.status_code == 201, f"Erro ao criar cliente: {resp.text}"
E       AssertionError: Erro ao criar cliente: {"error":{"code":500,"message":"Erro interno ao criar cliente"}}
E       assert 500 == 201
E        +  where 500 = <Response [500 Internal Server Error]>.status_code

src/tests/api/test_main.py:49: AssertionError
------------------------------ Captured log call -------------------------------
ERROR    uvicorn.error:main.py:108 Erro inesperado ao criar cliente: 'str' object has no attribute 'get_secret_value'
Traceback (most recent call last):
  File "/home/edson/repos/BE_AqiFome_RESTfull/src/api/main.py", line 103, in criar_cliente
    return service.criar_cliente(cliente)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edson/repos/BE_AqiFome_RESTfull/src/core/service/cliente_service.py", line 44, in criar_cliente
    return self.repository.create(cliente_com_senha_hash)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/edson/repos/BE_AqiFome_RESTfull/src/core/repository/cliente_repository.py", line 32, in create
    senha=cliente.senha.get_secret_value(),  # Extrai a string
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'str' object has no attribute 'get_secret_value'
_______________________ test_atualizar_cliente_com_senha _______________________

mock_get_password_hash = <MagicMock name='get_password_hash' id='140320053142704'>

    @patch('core.service.cliente_service.get_password_hash')
    def test_atualizar_cliente_com_senha(mock_get_password_hash):
        """
        Testa a atualização de um cliente, incluindo a senha,
        verificando se a senha é hasheada corretamente.
        """
        # Configuração
        mock_repo = MagicMock()
        mock_get_password_hash.return_value = "nova_senha_hasheada"
        service = ClienteService(mock_repo)
        cliente_id = 1
        update_data = ClienteUpdate(
            nome="Novo Nome",
            senha=SecretStr("nova_senha_123")
        )
    
        # Ação
        service.atualizar_cliente(cliente_id, update_data)
    
        # Verificação
>       mock_get_password_hash.assert_called_once_with("nova_senha_123")

src/tests/core/service/test_cliente_service.py:68: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <MagicMock name='get_password_hash' id='140320053142704'>
args = ('nova_senha_123',), kwargs = {}
msg = "Expected 'get_password_hash' to be called once. Called 0 times."

    def assert_called_once_with(self, /, *args, **kwargs):
        """assert that the mock was called exactly once and that that call was
        with the specified arguments."""
        if not self.call_count == 1:
            msg = ("Expected '%s' to be called once. Called %s times.%s"
                   % (self._mock_name or 'mock',
                      self.call_count,
                      self._calls_repr()))
>           raise AssertionError(msg)
E           AssertionError: Expected 'get_password_hash' to be called once. Called 0 times.

/usr/lib/python3.12/unittest/mock.py:955: AssertionError
=============================== warnings summary ===============================
.virtual/lib/python3.12/site-packages/passlib/utils/__init__.py:854
  /home/edson/repos/BE_AqiFome_RESTfull/.virtual/lib/python3.12/site-packages/passlib/utils/__init__.py:854: DeprecationWarning: 'crypt' is deprecated and slated for removal in Python 3.13
    from crypt import crypt as _crypt

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
================================ tests coverage ================================
_______________ coverage: platform linux, python 3.12.3-final-0 ________________

Name                                                    Stmts   Miss  Cover   Missing
-------------------------------------------------------------------------------------
src/api/__init__.py                                         0      0   100%
src/api/main.py                                           115     52    55%   63-68, 90-91, 105-106, 119-124, 133-139, 149-155, 164-169, 186-198, 207-209, 219-223
src/core/__init__.py                                        0      0   100%
src/core/config/__init__.py                                 0      0   100%
src/core/config/db.py                                       7      0   100%
src/core/config/redis_config.py                            13      0   100%
src/core/config/settings.py                                35      4    89%   51-52, 66-67
src/core/domain/__init__.py                                 0      0   100%
src/core/domain/cliente.py                                 24      0   100%
src/core/domain/favorito.py                                22      0   100%
src/core/repository/__init__.py                             0      0   100%
src/core/repository/cliente_orm.py                          9      0   100%
src/core/repository/cliente_repository.py                  42      1    98%   89
src/core/repository/favorito_orm.py                         8      0   100%
src/core/repository/favorito_repository.py                 26      0   100%
src/core/security/security.py                              44     25    43%   21, 33-40, 47-51, 57-75
src/core/service/__init__.py                                0      0   100%
src/core/service/cliente_service.py                        25      6    76%   53, 64-72, 94, 107-115
src/core/service/favorito_service.py                       53      3    94%   30, 39, 44
src/externos/fake_store_product.py                         20     14    30%   8-14, 20-26
src/helpers/__init__.py                                     0      0   100%
src/helpers/seed.py                                        38     38     0%   1-64
src/tests/__init__.py                                       0      0   100%
src/tests/api/__init__.py                                   0      0   100%
src/tests/api/test_main.py                                 62     30    52%   50-97
src/tests/core/__init__.py                                  0      0   100%
src/tests/core/domain/__init__.py                           0      0   100%
src/tests/core/domain/test_cliente.py                      44      2    95%   100-101
src/tests/core/domain/test_favorito.py                     28      0   100%
src/tests/core/repository/test_cliente_repository.py       73      0   100%
src/tests/core/repository/test_favorito_repository.py      56      0   100%
src/tests/core/service/__init__.py                          0      0   100%
src/tests/core/service/test_cliente_service.py             54      6    89%   69-76
src/tests/core/service/test_favorito_service.py            50      0   100%
-------------------------------------------------------------------------------------
TOTAL                                                     848    181    79%
=========================== short test summary info ============================
FAILED src/tests/api/test_main.py::test_crud_cliente_e_favoritos - AssertionE...
FAILED src/tests/core/service/test_cliente_service.py::test_atualizar_cliente_com_senha
=================== 2 failed, 36 passed, 1 warning in 4.13s ====================
